{"remainingRequest":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/home/rack.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/home/rack.vue","mtime":1560263460552},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios'; // Consultas al Backend\n\nimport moment from 'moment'; // Trabajo del tipo de dato Date (fechas).\n\nimport { mapActions, mapState } from 'vuex';\n/*Bibliotecas del rack*/\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { constants } from 'crypto';\nam4core.useTheme(am4themes_animated);\nexport default {\n  name: 'Rack',\n  data: function data() {\n    return {//\n    };\n  },\n  mounted: function mounted() {\n    /*Chart init*/\n    var chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n\n    chart.paddingRight = 30;\n    chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\n    /*Color estático*/\n\n    var colorSet = new am4core.ColorSet();\n    colorSet.saturation = 1.5;\n    /*Data source*/\n\n    chart.dataSource.url = this.serverURL + '/rack/'; //chart.dataSource.reloadFrequency = 1000;\n\n    chart.dataSource.incremental = true;\n    chart.dataSource.load();\n    chart.dataSource.parser = new am4core.JSONParser();\n    chart.dataSource.parser.options.emptyAs = 0;\n    console.log(chart.data);\n    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"roomNumber\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.inversed = true;\n    /*Datos de tiempo*/\n\n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n    dateAxis.renderer.minGridDistance = 50;\n    dateAxis.baseInterval = {\n      count: 1,\n      timeUnit: \"day\"\n    };\n    dateAxis.min = new Date().getTime();\n    dateAxis.max = new Date(2025, 0, 1, 24, 0, 0, 0).getTime();\n    dateAxis.strictMinMax = true;\n    dateAxis.renderer.tooltipLocation = 0;\n    /*Barrita con info (mouseIn)*/\n\n    var series1 = chart.series.push(new am4charts.ColumnSeries());\n    series1.columns.template.width = am4core.percent(80);\n    series1.columns.template.tooltipText = \"{firstNameGuest} {lastNameGuest} - Desde: {dateIn} / Hasta: {dateOut}\";\n    /*Barra de reserva*/\n\n    series1.dataFields.openDateX = \"dateIn\";\n    series1.dataFields.dateX = \"dateOut\";\n    series1.dataFields.categoryY = \"roomNumber\";\n    series1.fill = am4core.color(\"red\").lighten(0.0);\n    series1.stroke = am4core.color(\"red\").lighten(0.0);\n    /*    series1.columns.template.propertyFields.fill = \"color\"; // get color from data\n        series1.columns.template.propertyFields.stroke = \"color\";*/\n\n    series1.columns.template.strokeOpacity = 1;\n    /*Scrollbar's*/\n\n    chart.scrollbarX = new am4core.Scrollbar();\n    chart.scrollbarY = new am4core.Scrollbar();\n  },\n  computed: _objectSpread({}, mapState(['serverURL'])),\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};",{"version":3,"sources":["rack.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n  <div class=\"hello\" ref=\"chartdiv\">    \n  </div>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'; // Consultas al Backend\nimport moment from 'moment'; // Trabajo del tipo de dato Date (fechas).\nimport { mapActions, mapState } from 'vuex';\n/*Bibliotecas del rack*/\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { constants } from 'crypto';\n\nam4core.useTheme(am4themes_animated);\n\nexport default {\n  name: 'Rack',\n  data () {\n    return {\n      //\n    }\n\t},  \n  mounted() {\n    /*Chart init*/\n    var chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n    chart.paddingRight = 30;\n    chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\n\n    /*Color estático*/\n    var colorSet = new am4core.ColorSet();\n    colorSet.saturation = 1.5;\n\n    /*Data source*/\n    chart.dataSource.url = this.serverURL + '/rack/';\n    //chart.dataSource.reloadFrequency = 1000;\n    chart.dataSource.incremental = true;\n    chart.dataSource.load();\n    chart.dataSource.parser = new am4core.JSONParser();\n    chart.dataSource.parser.options.emptyAs = 0;\n    \n    console.log(chart.data);\n\n    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"roomNumber\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.inversed = true;\n\n    /*Datos de tiempo*/ \n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n    dateAxis.renderer.minGridDistance = 50;\n    dateAxis.baseInterval = { count: 1, timeUnit: \"day\" };\n    dateAxis.min = new Date().getTime();\n    dateAxis.max = new Date(2025, 0, 1, 24, 0, 0, 0).getTime();\n    dateAxis.strictMinMax = true;\n    dateAxis.renderer.tooltipLocation = 0;\n\n    /*Barrita con info (mouseIn)*/ \n    var series1 = chart.series.push(new am4charts.ColumnSeries());\n    series1.columns.template.width = am4core.percent(80);\n    series1.columns.template.tooltipText = \"{firstNameGuest} {lastNameGuest} - Desde: {dateIn} / Hasta: {dateOut}\";    \n   \n    /*Barra de reserva*/\n    series1.dataFields.openDateX = \"dateIn\";\n    series1.dataFields.dateX = \"dateOut\";\n    series1.dataFields.categoryY = \"roomNumber\";\n    series1.fill = am4core.color(\"red\").lighten(0.0);\n    series1.stroke = am4core.color(\"red\").lighten(0.0);\n/*    series1.columns.template.propertyFields.fill = \"color\"; // get color from data\n    series1.columns.template.propertyFields.stroke = \"color\";*/\n    series1.columns.template.strokeOpacity = 1;\n\n    /*Scrollbar's*/ \n    chart.scrollbarX = new am4core.Scrollbar();\n    chart.scrollbarY = new am4core.Scrollbar();\n  },\n  computed: {\n    ...mapState([\n      'serverURL',\n    ]),\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.hello {\n  width: 100%;\n  height: 500px;\n}\n</style>"],"sourceRoot":"src/components/home"}]}