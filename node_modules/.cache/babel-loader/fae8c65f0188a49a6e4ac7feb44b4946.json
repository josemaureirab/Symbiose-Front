{"remainingRequest":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/reservation/reservationStore.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/reservation/reservationStore.vue","mtime":1560263460553},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nimport { validationMixin } from 'vuelidate';\nimport { required, maxLength, email } from 'vuelidate/lib/validators';\nexport default {\n  name: 'reservation-store',\n  data: function data() {\n    return {\n      date: '',\n      menu: '',\n      checkbox: '',\n      dictionary: {\n        custom: {\n          name: {\n            required: function required() {\n              return 'El campo nombre puede estar vacío';\n            },\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20' // custom messages\n\n          },\n          lastname: {\n            required: function required() {\n              return 'El campo apellido no puede estar vacío';\n            },\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20' // custom messages\n\n          },\n          select: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    };\n  },\n  mixins: [validationMixin],\n  validations: {\n    checkbox: {\n      checked: function checked(val) {\n        return val;\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  },\n  created: function created() {\n    this.getGuests();\n    this.getReservations();\n  },\n  mounted: function mounted() {\n    this.$validator.localize('en', this.dictionary);\n  },\n  methods: _objectSpread({}, mapActions(['getGuests', 'getReservations', 'storeReservation']), {\n    submit: function submit() {\n      this.$validator.validateAll();\n    }\n  }),\n  computed: _objectSpread({}, mapState(['serverURL', 'reservations', 'guests', 'guest']), {\n    guest: {\n      get: function get() {\n        return this.$store.state.guest;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateGuest', payload);\n      }\n    },\n    checkboxErrors: function checkboxErrors() {\n      var errors = [];\n      if (!this.$v.checkbox.$dirty) return errors;\n      !this.$v.checkbox.checked && errors.push('La confirmación es requerida  ');\n      return errors;\n    }\n  })\n};",{"version":3,"sources":["reservationStore.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,EAAA,SAAA,EAAA,KAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,EAAA;AAAA,qBAAA,mCAAA;AAAA,aADA;AAEA,YAAA,GAAA,EAAA,+DAFA,CAGA;;AAHA,WADA;AAMA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,EAAA;AAAA,qBAAA,wCAAA;AAAA,aADA;AAEA,YAAA,GAAA,EAAA,+DAFA,CAGA;;AAHA,WANA;AAWA,UAAA,MAAA,EAAA;AACA,YAAA,QAAA,EAAA;AADA;AAXA;AADA;AAJA,KAAA;AAsBA,GAzBA;AA0BA,EAAA,MAAA,EAAA,CAAA,eAAA,CA1BA;AA2BA,EAAA,WAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AACA,eAAA,GAAA;AACA;AAHA;AADA,GA3BA;AAkCA,EAAA,aAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAlCA;AAqCA,EAAA,OArCA,qBAqCA;AACA,SAAA,SAAA;AACA,SAAA,eAAA;AACA,GAxCA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,UAAA,CAAA,QAAA,CAAA,IAAA,EAAA,KAAA,UAAA;AACA,GA3CA;AA4CA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,WADA,EAEA,iBAFA,EAGA,kBAHA,CAAA,CADA;AAMA,IAAA,MANA,oBAMA;AACA,WAAA,UAAA,CAAA,WAAA;AACA;AARA,IA5CA;AAsDA,EAAA,QAAA,oBACA,QAAA,CAAA,CACA,WADA,EAEA,cAFA,EAGA,QAHA,EAIA,OAJA,CAAA,CADA;AAOA,IAAA,KAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,OAJA,EAIA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,OAAA;AACA;AANA,KAPA;AAeA,IAAA,cAfA,4BAeA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,QAAA,CAAA,MAAA,EAAA,OAAA,MAAA;AACA,OAAA,KAAA,EAAA,CAAA,QAAA,CAAA,OAAA,IAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,CAAA;AACA,aAAA,MAAA;AACA;AApBA;AAtDA,CAAA","sourcesContent":["<template>\n  <div class=\"guests\">\n    <v-container fluid>\n    <form @submit.prevent=\"storeReservation\">\n        <v-autocomplete\n            label=\"Selecciona al cliente\"\n            :items=\"guests\"\n            v-model=\"guest\"\n            item-text=\"`${data.item.firstName}, ${data.item.lastName}`\"\n            item-value=\"`${data.item.id}`\"\n            :menu-props=\"{maxHeight:'auto'}\"\n          >\n            <template slot=\"selection\" slot-scope=\"data\">\n              {{ data.item.firstName}} {{data.item.lastName}}\n            </template>\n            <template slot=\"item\" slot-scope=\"data\">\n              <v-list-tile-content>\n                <v-list-tile-title v-html=\"`${data.item.firstName} ${data.item.lastName}`\">\n                </v-list-tile-title>\n                <!-- <v-list-tile-sub-title v-html=\"data.item.firstName\"></v-list-tile-sub-title> -->\n              </v-list-tile-content>\n            </template>\n          </v-autocomplete>\n        <v-btn color=\"success\" round type=\"submit\">\n\t\t\t\t\t<span>Seleccionar</span><v-icon>check</v-icon>\n\t\t\t\t</v-btn>\n           \n      </form>\n    </v-container>\n  </div>\n</template>\n\n<script>\n\nimport { mapState, mapActions } from 'vuex';\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email } from 'vuelidate/lib/validators'\n\nexport default {\n  name: 'reservation-store', \n\tdata(){\n\t\treturn{\n      date: '',\n      menu: '',\n      checkbox: '',\n      dictionary: {\n        custom: {\n          name: {\n            required: () => 'El campo nombre puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },\n          lastname: {\n            required: () => 'El campo apellido no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },          \n          select: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    }\n  },\n  mixins: [validationMixin],\n  validations: {\n    checkbox: {\n      checked (val) {\n        return val\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  }, \n  created() {\n    this.getGuests();\n    this.getReservations();\n  },\n  mounted() {\n    this.$validator.localize('en', this.dictionary)\n  },\n\tmethods: {\n    ...mapActions([\n      'getGuests',\n      'getReservations',\n      'storeReservation'\n    ]),\n    submit () {\n      this.$validator.validateAll()\n    },\n\t},\n\tcomputed: {\n    ...mapState([\n      'serverURL',\n      'reservations',\n      'guests',\n      'guest'\n    ]),\n    guest: {\n      get () {\n        return this.$store.state.guest;\n      },\n      set (payload) {\n        this.$store.commit('updateGuest', payload)\n      }\n    },\n    checkboxErrors () {\n      const errors = []\n      if (!this.$v.checkbox.$dirty) return errors\n      !this.$v.checkbox.checked && errors.push('La confirmación es requerida  ')\n      return errors\n    }\n  }  \n  ,\n}\n</script>\n"],"sourceRoot":"src/components/reservation"}]}