{"remainingRequest":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/babel-loader/lib/index.js!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vuetify-loader/lib/loader.js!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/checkin/collapse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/checkin/collapse.vue","mtime":1560899731288},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport { mapState, mapActions } from 'vuex';\nimport GuestStore from '@/components/guest/store';\nimport ReservationStore from '@/components/reservation/store';\nexport default {\n  name: 'checkin-collapse',\n  components: {\n    'guest-store': GuestStore,\n    'reservation-store': ReservationStore\n  },\n  data: function data() {\n    return {\n      checkinStatusString: '',\n      addGuestButton: true,\n      checkinStatus: true,\n      checkinButton: true,\n      confirmButton: true,\n      guestCounter: 0\n    };\n  },\n  created: function created() {\n    /* Restarting Variables */\n    this.checkinStatusString = '';\n    this.addGuestButton = true;\n    this.checkinStatus = true;\n    this.checkinButton = true;\n    this.confirmButton = true;\n    this.guestCounter = 0;\n    this.reservedRoom = {};\n    this.reservedRoomId = '';\n    this.room = {};\n    this.roomId = '';\n    this.guestId = '';\n    this.showAddGuest = false;\n    this.readonly = true;\n    this.expand = true;\n    this.panel = [true];\n    this.$store.commit('decryptReservedRoomId', this.$route.params.id);\n    this.getReservedRoom(this.reservedRoomId);\n  },\n  methods: _objectSpread({}, mapActions(['getReservedRoom', 'updateReservedRoom', 'updateHostedAt', 'deleteHostedAt', 'getRoom', 'goBack']), {\n    editReservedRoom: function editReservedRoom() {\n      if (this.checkinButton) {\n        this.reservedRoom.checkIn = moment().format(\"YYYY-MM-DD\");\n        this.updateReservedRoom();\n        this.checkinButton = !this.checkinButton;\n      } else {\n        this.checkinButton = !this.checkinButton;\n      }\n    },\n    confirmReserverGuest: function confirmReserverGuest(payload) {\n      this.guestId = payload;\n\n      if (this.confirmButton) {\n        this.updateHostedAt();\n        this.confirmButton = false;\n      } else {\n        this.updateHostedAt();\n        this.confirmButton = true;\n      }\n    },\n    unconfirmReserverGuest: function unconfirmReserverGuest(payload) {\n      this.guestId = payload;\n\n      if (this.confirmButton) {\n        this.deleteHostedAt();\n        this.confirmButton = true;\n      } else {\n        this.deleteHostedAt();\n        this.confirmButton = false;\n      }\n    },\n    deleteGuestFromRoom: function deleteGuestFromRoom(payload) {\n      this.guestId = payload;\n      this.deleteHostedAt();\n    },\n    compareGuest: function compareGuest(payload) {\n      if (this.reservedRoom.reservation.guest.id === payload) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    addNewGuest: function addNewGuest() {\n      this.$store.commit('updateCollapsePanel', false);\n    },\n    isChecked: function isChecked() {\n      console.log(!this.checkinButton);\n      console.log(this.checkinStatus);\n      console.log(!this.checkinButton && this.checkinStatus);\n\n      if (!this.checkinButton && this.checkinStatus) {\n        return true;\n      } else if (!this.checkinButton === false && this.checkinStatus === false) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    shouldAddGuest: function shouldAddGuest() {\n      this.maxByRoomType();\n\n      if (!this.checkinButton && this.checkinStatus && this.addGuestButton) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    maxByRoomType: function maxByRoomType() {\n      if (this.room != null && this.room.roomType != null) {\n        this.getGuestCounter;\n        /* Matrimonial */\n\n        if (this.room.roomType.id === 15) {\n          if (this.guestCounter === 2) {\n            this.addGuestButton = false;\n          } else {\n            this.addGuestButton = true;\n          }\n        }\n        /* Presidencial */\n        else if (this.room.roomType.id === 16) {\n            if (this.guestCounter === 4) {\n              this.addGuestButton = false;\n            } else {\n              this.addGuestButton = true;\n            }\n          }\n          /* Triple */\n          else if (this.room.roomType.id === 14) {\n              if (this.guestCounter === 3) {\n                this.addGuestButton = false;\n              } else {\n                this.addGuestButton = true;\n              }\n            }\n            /* Doble */\n            else if (this.room.roomType.id === 13) {\n                if (this.guestCounter === 2) {\n                  this.addGuestButton = false;\n                } else {\n                  this.addGuestButton = true;\n                }\n              }\n              /* Simple */\n              else if (this.room.roomType.id === 12) {\n                  if (this.guestCounter === 1) {\n                    this.addGuestButton = false;\n                  } else {\n                    this.addGuestButton = true;\n                  }\n                } else {\n                  this.addGuestButton = true;\n                }\n      }\n    },\n    confirmReserverGuestInRoom: function confirmReserverGuestInRoom() {\n      var _this = this;\n\n      var reserverGuest = this.reservedRoom.guestSet.filter(function (guest) {\n        return _this.reservedRoom.reservation.guest.id === guest.id;\n      });\n\n      if (reserverGuest.length != 0) {\n        this.confirmButton = false;\n      } else {\n        this.confirmButton = true;\n      }\n    }\n  }),\n  computed: _objectSpread({}, mapState(['loader', 'reservedRoom', 'reservedRoomId', 'room', 'roomId', 'guestId', 'showAddGuest', 'readonly', 'expand', 'panel']), {\n    getGuestCounter: function getGuestCounter() {\n      var _this2 = this;\n\n      this.guestCounter = 0;\n      this.reservedRoom.guestSet.forEach(function (guest) {\n        _this2.guestCounter++;\n      });\n    },\n    getCheckinStatus: function getCheckinStatus() {\n      this.confirmReserverGuestInRoom();\n\n      if (this.reservedRoom.checkIn === null) {\n        this.checkinStatus = false;\n        return this.checkinStatusString = 'No realizado';\n      } else {\n        this.checkinStatus = true;\n        return this.checkinStatusString = 'Realizado';\n      }\n    },\n    getRoomType: function getRoomType() {\n      if (this.room != null && this.room.roomType != null) {\n        /* Matrimonial */\n        if (this.room.roomType.id === 15) {\n          return 'Matrimonial (2)';\n        }\n        /* Presidencial */\n        else if (this.room.roomType.id === 16) {\n            return 'Presidencial (4)';\n          }\n          /* Triple */\n          else if (this.room.roomType.id === 14) {\n              return 'Triple (3)';\n            }\n            /* Doble */\n            else if (this.room.roomType.id === 13) {\n                return 'Doble (2)';\n              }\n              /* Simple */\n              else if (this.room.roomType.id === 12) {\n                  return 'Simple (1)';\n                } else {\n                  return 'Ha ocurrido un error';\n                }\n      }\n    },\n    guestId: {\n      get: function get() {\n        return this.$store.state.guestId;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateGuestId', payload);\n      }\n    },\n    room: {\n      get: function get() {\n        return this.$store.state.room;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateRoom', payload);\n      }\n    },\n    roomId: {\n      get: function get() {\n        return this.$store.state.roomId;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateRoomId', payload);\n      }\n    },\n    readonly: {\n      get: function get() {\n        return this.$store.state.readonly;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateReadonly', payload);\n      }\n    },\n    panel: {\n      get: function get() {\n        return this.$store.state.panel;\n      },\n      set: function set(payload) {\n        this.$store.commit('updatePanel', payload);\n      }\n    },\n    reservedRoom: {\n      get: function get() {\n        return this.$store.state.reservedRoom;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateReservedRoom', payload);\n      }\n    },\n    reservedRoomId: {\n      get: function get() {\n        return this.$store.state.reservedRoomId;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateReservedRoomId', payload);\n      }\n    },\n    showAddGuest: {\n      get: function get() {\n        return this.$store.state.showAddGuest;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateShowAddGuest', payload);\n      }\n    },\n    expand: {\n      get: function get() {\n        return this.$store.state.expand;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateExpand', payload);\n      }\n    }\n  })\n};",{"version":3,"sources":["collapse.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"checkin-collapse\">\n    <v-layout align-center justify-end fill-height class=\"mb-3\">\n      <v-flex xs12 sm6 md3 order-md4 order-sm2>\n        <v-btn class=\"goBackButton\" color=\"info\" block :loading=\"loader\" @click=\"goBack\">\n          Volver\n          <v-icon dark>arrow_back</v-icon>\n        </v-btn>\n      </v-flex>\n    </v-layout>\n    <v-expansion-panel v-model=\"panel\" :readonly=\"readonly\" :expand=\"expand\" dark v-if=\"reservedRoom.reservation\">\n      <v-expansion-panel-content>\n        <template v-slot:header>\n          <div>Reservación a nombre de: {{ reservedRoom.reservation.guest.firstName + ' ' + reservedRoom.reservation.guest.lastName }}</div>\n          <div>Tipo de habitación: {{ getRoomType }}</div>\n          <div>Estado de check-in: {{ getCheckinStatus }}</div>\n          <v-btn v-show=\"isChecked()\" color=\"success\" round @click=\"editReservedRoom\">\n            Check-in\n            <v-icon dark class=\"ml-2\">playlist_add_check</v-icon>\n          </v-btn>\n          <v-btn v-show=\"!isChecked()\" color=\"warning\" round @click=\"editReservedRoom\">\n            Editar Check-in\n            <v-icon dark class=\"ml-3\">edit</v-icon>\n          </v-btn>\n        </template>\n        <v-card> \n          <v-layout align-center justify-space-around row fill-height>\n            <v-flex>\n              <v-card-text class=\"lighten-3\">Nombre: {{ reservedRoom.reservation.guest.firstName + ' ' + reservedRoom.reservation.guest.lastName }}</v-card-text>\n            </v-flex>\n            <v-flex>\n              <v-card-text class=\"lighten-3\">Fecha de nacimiento: {{ reservedRoom.reservation.guest.birthDate }}</v-card-text>\n            </v-flex>\n            <v-flex v-show=\"confirmButton\">\n              <v-card-text class=\"lighten-3\">\n                <v-btn color=\"success\" :disabled=\"!isChecked()\" block v-on:click=\"confirmReserverGuest(reservedRoom.reservation.guest.id)\">\n                  Confirmar\n                  <v-icon dark class=\"ml-1\">done</v-icon>\n                </v-btn>\n              </v-card-text>\n            </v-flex>\n            <v-flex v-show=\"!confirmButton\">\n              <v-card-text class=\"lighten-3\">\n                <v-btn color=\"red\" :disabled=\"!isChecked()\" block @click=\"unconfirmReserverGuest(reservedRoom.reservation.guest.id)\">\n                  Quitar\n                  <v-icon dark>delete</v-icon>\n                </v-btn>\n              </v-card-text>\n            </v-flex>\n          </v-layout>\n\n          <!-- Guests en la tabla intermedia -->\n          <div v-for=\"guest in reservedRoom.guestSet\" :key=\"guest.id\">\n            <v-layout align-center justify-space-around row fill-height v-show=\"compareGuest(guest.id)\">\n              <v-flex>\n                <v-card-text class=\"lighten-3\">Nombre: {{ guest.firstName + ' ' + guest.lastName }}</v-card-text>\n              </v-flex>\n              <v-flex>\n                <v-card-text class=\"lighten-3\">Fecha de nacimiento: {{ guest.birthDate }}</v-card-text>\n              </v-flex>\n              <v-flex>\n                <v-card-text class=\"lighten-3\">\n                  <v-btn color=\"red\" :disabled=\"!isChecked()\" block @click=\"deleteGuestFromRoom(guest.id)\">\n                    Quitar\n                    <v-icon dark>delete</v-icon>\n                  </v-btn>\n                </v-card-text>\n              </v-flex>\n            </v-layout>\n          </div>\n\n          <v-card-text class=\"lighten-3\">\n            <v-btn color=\"success\" :disabled=\"!shouldAddGuest()\" block @click=\"addNewGuest\">\n              Agregar un nuevo huésped\n              <v-icon dark class=\"ml-2\">person_add</v-icon>\n            </v-btn>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n    <guest-store v-show=\"showAddGuest\" :isReservation=\"false\" :isCheckin=\"true\"/>\n    <reservation-store v-show=\"showAddGuest\" :isCheckin=\"true\"/>\n  </div>\n</template>\n\n<script>\n\nimport moment from 'moment'\nimport { mapState, mapActions } from 'vuex'\nimport GuestStore from '@/components/guest/store'\nimport ReservationStore from '@/components/reservation/store'\n\nexport default {\n  name: 'checkin-collapse',\n  components: {\n    'guest-store': GuestStore,\n    'reservation-store': ReservationStore\n  },\n  data() {\n    return {\n      checkinStatusString: '',\n      addGuestButton: true,\n      checkinStatus: true,\n      checkinButton: true,\n      confirmButton: true,\n      guestCounter: 0\n    }\n  },\n  created () {\n    /* Restarting Variables */\n    this.checkinStatusString = ''\n    this.addGuestButton = true\n    this.checkinStatus = true\n    this.checkinButton = true\n    this.confirmButton = true\n    this.guestCounter = 0\n    this.reservedRoom = {}\n    this.reservedRoomId = ''\n    this.room = {}\n    this.roomId = ''\n    this.guestId = ''\n    this.showAddGuest = false\n    this.readonly = true\n    this.expand = true\n    this.panel = [ true ]\n    this.$store.commit('decryptReservedRoomId', this.$route.params.id)\n    this.getReservedRoom(this.reservedRoomId)\n  },\n  methods: {\n    ...mapActions([\n      'getReservedRoom',\n      'updateReservedRoom',\n      'updateHostedAt',\n      'deleteHostedAt',\n      'getRoom',\n      'goBack'\n    ]),\n    editReservedRoom () {\n      if (this.checkinButton) {\n        this.reservedRoom.checkIn = moment().format(\"YYYY-MM-DD\")\n        this.updateReservedRoom()\n        this.checkinButton = !this.checkinButton\n      }\n      else {\n        this.checkinButton = !this.checkinButton\n      }\n    },\n    confirmReserverGuest (payload) {\n      this.guestId = payload\n      if (this.confirmButton) {\n        this.updateHostedAt()\n        this.confirmButton = false\n      }\n      else {\n        this.updateHostedAt();\n        this.confirmButton = true\n      }\n    },\n    unconfirmReserverGuest (payload) {\n      this.guestId = payload\n      if (this.confirmButton) {\n        this.deleteHostedAt()\n        this.confirmButton = true\n      }\n      else {\n        this.deleteHostedAt();\n        this.confirmButton = false\n      }\n    },\n    deleteGuestFromRoom (payload) {\n      this.guestId = payload\n      this.deleteHostedAt()\n    },\n    compareGuest (payload) {\n      if (this.reservedRoom.reservation.guest.id === payload) {\n        return false\n      }\n      else {\n        return true\n      }\n    },\n    addNewGuest () {\n      this.$store.commit('updateCollapsePanel', false)\n    },\n    isChecked () {\n      console.log(!this.checkinButton);\n      console.log(this.checkinStatus);\n      console.log((!this.checkinButton && this.checkinStatus));\n      if (!this.checkinButton && this.checkinStatus) {\n        return true\n      }\n      else if(!this.checkinButton === false && this.checkinStatus === false) {\n        return true\n      }\n      else {\n        return false\n      }\n    },\n    shouldAddGuest () {\n      this.maxByRoomType()\n      if ((!this.checkinButton && this.checkinStatus) && this.addGuestButton) {\n        return true\n      }\n      else {\n        return false\n      }\n    },\n    maxByRoomType () {\n      if(this.room != null && this.room.roomType != null) {\n        this.getGuestCounter\n        /* Matrimonial */\n        if(this.room.roomType.id === 15) {\n          if (this.guestCounter === 2) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Presidencial */\n        else if(this.room.roomType.id === 16) {\n          if (this.guestCounter === 4) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Triple */\n        else if(this.room.roomType.id === 14){\n          if (this.guestCounter === 3) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Doble */\n        else if(this.room.roomType.id === 13){\n          if (this.guestCounter === 2) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Simple */\n        else if(this.room.roomType.id === 12){\n          if (this.guestCounter === 1) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        else {\n          this.addGuestButton = true\n        }\n      }\n    },\n    confirmReserverGuestInRoom () {\n      let reserverGuest = this.reservedRoom.guestSet.filter(guest => {\n            return (this.reservedRoom.reservation.guest.id === guest.id)\n          })\n      if(reserverGuest.length != 0){\n        this.confirmButton = false\n      }\n      else {\n        this.confirmButton = true\n      }\n    },\n  },\n  computed: {\n    ...mapState([\n      'loader',\n      'reservedRoom',\n      'reservedRoomId',\n      'room',\n      'roomId',\n      'guestId',\n      'showAddGuest',\n      'readonly',\n      'expand',\n      'panel'\n    ]),\n    getGuestCounter () {\n      this.guestCounter = 0\n      this.reservedRoom.guestSet.forEach(guest => {\n        this.guestCounter++        \n      });\n    },\n    getCheckinStatus () {\n      this.confirmReserverGuestInRoom()\n      if(this.reservedRoom.checkIn === null) {\n        this.checkinStatus = false\n        return this.checkinStatusString = 'No realizado'\n      }\n      else {\n        this.checkinStatus = true\n        return this.checkinStatusString = 'Realizado'\n      }\n    },\n    getRoomType() {\n      if(this.room != null && this.room.roomType != null) {\n        /* Matrimonial */\n        if(this.room.roomType.id === 15) {\n          return 'Matrimonial (2)'\n        }\n        /* Presidencial */\n        else if(this.room.roomType.id === 16) {\n          return 'Presidencial (4)'\n        }\n        /* Triple */\n        else if(this.room.roomType.id === 14){\n          return 'Triple (3)'\n        }\n        /* Doble */\n        else if(this.room.roomType.id === 13){\n          return 'Doble (2)'\n        }\n        /* Simple */\n        else if(this.room.roomType.id === 12){\n          return 'Simple (1)'\n        }\n        else {\n          return 'Ha ocurrido un error'\n        }\n      }\n    },\n    guestId: {\n      get () {\n        return this.$store.state.guestId\n      },\n      set (payload) {\n        this.$store.commit('updateGuestId', payload)\n      }\n    },\n    room: {\n      get () {\n        return this.$store.state.room\n      },\n      set (payload) {\n        this.$store.commit('updateRoom', payload)\n      }\n    },\n    roomId: {\n      get () {\n        return this.$store.state.roomId\n      },\n      set (payload) {\n        this.$store.commit('updateRoomId', payload)\n      }\n    },\n    readonly: {\n      get () {\n        return this.$store.state.readonly\n      },\n      set (payload) {\n        this.$store.commit('updateReadonly', payload)\n      }\n    },\n    panel: {\n      get () {\n        return this.$store.state.panel\n      },\n      set (payload) {\n        this.$store.commit('updatePanel', payload)\n      }\n    },\n    reservedRoom: {\n      get () {\n        return this.$store.state.reservedRoom\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoom', payload)\n      }\n    },\n    reservedRoomId: {\n      get () {\n        return this.$store.state.reservedRoomId\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoomId', payload)\n      }\n    },\n    showAddGuest: {\n      get () {\n        return this.$store.state.showAddGuest\n      },\n      set (payload) {\n        this.$store.commit('updateShowAddGuest', payload)\n      }\n    },\n    expand: {\n      get () {\n        return this.$store.state.expand\n      },\n      set (payload) {\n        this.$store.commit('updateExpand', payload)\n      }\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/components/checkin"}]}