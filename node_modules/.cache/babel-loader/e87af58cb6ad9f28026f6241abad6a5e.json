{"remainingRequest":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/babel-loader/lib/index.js!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vuetify-loader/lib/loader.js!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/checkin/show.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/checkin/show.vue","mtime":1560899731287},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from '@/router';\nimport moment from 'moment';\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'checkin-show',\n  data: function data() {\n    return {\n      loading: false,\n      headers: [{\n        text: 'Reservante',\n        value: 'guest.firstName',\n        sortable: false,\n        align: 'center'\n      }, {\n        text: 'Check-In',\n        value: 'calories',\n        sortable: false,\n        align: 'center'\n      }, {\n        text: 'Check-out',\n        value: 'fat',\n        sortable: false,\n        align: 'center'\n      }, {\n        text: '',\n        value: 'carbs',\n        sortable: false,\n        align: 'center'\n      }]\n    };\n  },\n  watch: {\n    pagination: {\n      handler: function handler() {\n        var _this = this;\n\n        this.loading = true;\n        this.$store.dispatch('queryItems', this.searchReservedRoom).then(function (result) {\n          _this.loading = false;\n        });\n      },\n      deep: true\n    }\n  },\n  methods: _objectSpread({}, mapActions(['queryItems']), {\n    getFiltredReservedRooms: function getFiltredReservedRooms() {\n      this.$store.dispatch('queryItems', this.reservedRoom);\n    },\n    toCheckin: function toCheckin(payload) {\n      this.$store.commit('encryptReservedRoomId', payload);\n      router.push({\n        name: 'checkin_create',\n        params: {\n          id: this.reservedRoomId\n        }\n      });\n    },\n    formatDate: function formatDate(payload) {\n      if (payload != null) {\n        return moment(payload).format(\"YYYY-MM-DD\");\n      }\n    }\n  }),\n  computed: _objectSpread({}, mapState(['reservedRooms', 'searchReservedRoom', 'reservedRoom', 'reservedRoomId']), {\n    pagination: {\n      get: function get() {\n        return this.$store.getters.pagination;\n      },\n      set: function set(value) {\n        this.$store.commit('setPagination', value);\n      }\n    },\n    reservedRoomId: {\n      get: function get() {\n        return this.$store.state.reservedRoomId;\n      },\n      set: function set(payload) {\n        this.$store.commit('updateReservedRoomId', payload);\n      }\n    },\n    reservedRoom: {\n      get: function get() {\n        return this.$store.state.reservedRoom;\n      },\n      set: function set(value) {\n        this.$store.commit('updateReservedRoom', value);\n      }\n    },\n    reservedRooms: {\n      get: function get() {\n        return this.$store.state.reservedRooms;\n      },\n      set: function set(value) {\n        this.$store.commit('updateReservedRooms', value);\n      }\n    },\n    searchReservedRoom: {\n      get: function get() {\n        return this.$store.state.searchReservedRoom;\n      },\n      set: function set(value) {\n        this.$store.commit('updateSearchReservedRoom', value);\n      }\n    },\n    items: function items() {\n      return this.$store.getters.items;\n    }\n  })\n};",{"version":3,"sources":["show.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"inspire\">\n    <v-layout align-center justify-end fill-height class=\"mb-3\">\n      <v-flex xs12 sm6 md3>\n        <v-text-field\n          label=\"Buscar Reserva\"\n          v-model=\"searchReservedRoom\"\n          v-on:keyup=\"getFiltredReservedRooms\"\n          placeholder=\"Nombre del reservante\"\n        ></v-text-field>\n      </v-flex>\n    </v-layout>\n    <v-data-table\n      dark\n      must-sort\n      :headers=\"headers\"\n      :pagination.sync=\"pagination\"\n      :rows-per-page-items=\"pagination.rowsPerPageItems\"\n      :total-items=\"pagination.totalItems\"\n      :loading=\"loading\"\n      :items=\"items\"\n      class=\"elevation-1\"\n    >\n      <template slot=\"items\" slot-scope=\"props\" v-if=\"props.item.dateIni != null\">\n        <td class=\"text-xs-center\">{{ props.item.reservation.guest.firstName + ' ' + props.item.reservation.guest.lastName }}</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkIn != null\">{{ formatDate(props.item.checkIn) }}</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkIn === null\">No hay datos asociados</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkOut != null\">{{ formatDate(props.item.checkOut) }}</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkOut === null\">No hay datos asociados</td>\n        <td class=\"text-xs-center\">\n          <v-btn color=\"success\" round type=\"submit\" @click=\"toCheckin(props.item.id)\">\n            <span>Seleccionar</span><v-icon>check</v-icon>\n          </v-btn>\n        </td>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\n\nimport router from '@/router'\nimport moment from 'moment'\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'checkin-show',\n  data() {\n    return {\n      loading: false,\n      headers: [\n        { text: 'Reservante', value: 'guest.firstName', sortable:false, align: 'center' },\n        { text: 'Check-In', value: 'calories', sortable:false, align: 'center' },\n        { text: 'Check-out', value: 'fat', sortable:false, align: 'center' },\n        { text: '', value: 'carbs', sortable:false, align: 'center' },\n      ],\n    }\n  },\n  watch: {\n    pagination: {\n      handler () {\n        this.loading = true\n        this.$store.dispatch('queryItems', this.searchReservedRoom)\n          .then(result => {\n            this.loading = false\n          })\n      },\n      deep: true\n    }\n  },\n  methods: {\n    ...mapActions([\n      'queryItems'\n    ]),\n    getFiltredReservedRooms() {\n      this.$store.dispatch('queryItems', this.reservedRoom)\n    },\n    toCheckin(payload) {\n      this.$store.commit('encryptReservedRoomId', payload)\n      router.push({ name: 'checkin_create', params: { id: this.reservedRoomId } })\n    },\n    formatDate(payload) {\n      if (payload != null) {\n        return moment(payload).format(\"YYYY-MM-DD\");\n      }\n    },\n  },\n  computed: {\n    ...mapState([\n      'reservedRooms',\n      'searchReservedRoom',\n      'reservedRoom',\n      'reservedRoomId'\n    ]),\n    pagination: {\n      get: function () {\n        return this.$store.getters.pagination\n      },\n      set: function (value) {\n        this.$store.commit('setPagination', value)\n      }\n    },\n    reservedRoomId: {\n      get () {\n        return this.$store.state.reservedRoomId;\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoomId', payload)\n      }\n    },\n    reservedRoom: {\n      get: function () {\n        return this.$store.state.reservedRoom\n      },\n      set: function (value) {\n        this.$store.commit('updateReservedRoom', value)\n      }\n    },\n    reservedRooms: {\n      get: function () {\n        return this.$store.state.reservedRooms\n      },\n      set: function (value) {\n        this.$store.commit('updateReservedRooms', value)\n      }\n    },\n    searchReservedRoom: {\n      get: function () {\n        return this.$store.state.searchReservedRoom\n      },\n      set: function (value) {\n        this.$store.commit('updateSearchReservedRoom', value)\n      }\n    },\n    items () {\n      return this.$store.getters.items\n    }\n  },\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/components/checkin"}]}