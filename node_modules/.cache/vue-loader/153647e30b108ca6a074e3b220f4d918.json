{"remainingRequest":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/checkin/collapse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/checkin/collapse.vue","mtime":1560899731288},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport moment from 'moment'\nimport { mapState, mapActions } from 'vuex'\nimport GuestStore from '@/components/guest/store'\nimport ReservationStore from '@/components/reservation/store'\n\nexport default {\n  name: 'checkin-collapse',\n  components: {\n    'guest-store': GuestStore,\n    'reservation-store': ReservationStore\n  },\n  data() {\n    return {\n      checkinStatusString: '',\n      addGuestButton: true,\n      checkinStatus: true,\n      checkinButton: true,\n      confirmButton: true,\n      guestCounter: 0\n    }\n  },\n  created () {\n    /* Restarting Variables */\n    this.checkinStatusString = ''\n    this.addGuestButton = true\n    this.checkinStatus = true\n    this.checkinButton = true\n    this.confirmButton = true\n    this.guestCounter = 0\n    this.reservedRoom = {}\n    this.reservedRoomId = ''\n    this.room = {}\n    this.roomId = ''\n    this.guestId = ''\n    this.showAddGuest = false\n    this.readonly = true\n    this.expand = true\n    this.panel = [ true ]\n    this.$store.commit('decryptReservedRoomId', this.$route.params.id)\n    this.getReservedRoom(this.reservedRoomId)\n  },\n  methods: {\n    ...mapActions([\n      'getReservedRoom',\n      'updateReservedRoom',\n      'updateHostedAt',\n      'deleteHostedAt',\n      'getRoom',\n      'goBack'\n    ]),\n    editReservedRoom () {\n      if (this.checkinButton) {\n        this.reservedRoom.checkIn = moment().format(\"YYYY-MM-DD\")\n        this.updateReservedRoom()\n        this.checkinButton = !this.checkinButton\n      }\n      else {\n        this.checkinButton = !this.checkinButton\n      }\n    },\n    confirmReserverGuest (payload) {\n      this.guestId = payload\n      if (this.confirmButton) {\n        this.updateHostedAt()\n        this.confirmButton = false\n      }\n      else {\n        this.updateHostedAt();\n        this.confirmButton = true\n      }\n    },\n    unconfirmReserverGuest (payload) {\n      this.guestId = payload\n      if (this.confirmButton) {\n        this.deleteHostedAt()\n        this.confirmButton = true\n      }\n      else {\n        this.deleteHostedAt();\n        this.confirmButton = false\n      }\n    },\n    deleteGuestFromRoom (payload) {\n      this.guestId = payload\n      this.deleteHostedAt()\n    },\n    compareGuest (payload) {\n      if (this.reservedRoom.reservation.guest.id === payload) {\n        return false\n      }\n      else {\n        return true\n      }\n    },\n    addNewGuest () {\n      this.$store.commit('updateCollapsePanel', false)\n    },\n    isChecked () {\n      console.log(!this.checkinButton);\n      console.log(this.checkinStatus);\n      console.log((!this.checkinButton && this.checkinStatus));\n      if (!this.checkinButton && this.checkinStatus) {\n        return true\n      }\n      else if(!this.checkinButton === false && this.checkinStatus === false) {\n        return true\n      }\n      else {\n        return false\n      }\n    },\n    shouldAddGuest () {\n      this.maxByRoomType()\n      if ((!this.checkinButton && this.checkinStatus) && this.addGuestButton) {\n        return true\n      }\n      else {\n        return false\n      }\n    },\n    maxByRoomType () {\n      if(this.room != null && this.room.roomType != null) {\n        this.getGuestCounter\n        /* Matrimonial */\n        if(this.room.roomType.id === 15) {\n          if (this.guestCounter === 2) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Presidencial */\n        else if(this.room.roomType.id === 16) {\n          if (this.guestCounter === 4) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Triple */\n        else if(this.room.roomType.id === 14){\n          if (this.guestCounter === 3) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Doble */\n        else if(this.room.roomType.id === 13){\n          if (this.guestCounter === 2) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Simple */\n        else if(this.room.roomType.id === 12){\n          if (this.guestCounter === 1) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        else {\n          this.addGuestButton = true\n        }\n      }\n    },\n    confirmReserverGuestInRoom () {\n      let reserverGuest = this.reservedRoom.guestSet.filter(guest => {\n            return (this.reservedRoom.reservation.guest.id === guest.id)\n          })\n      if(reserverGuest.length != 0){\n        this.confirmButton = false\n      }\n      else {\n        this.confirmButton = true\n      }\n    },\n  },\n  computed: {\n    ...mapState([\n      'loader',\n      'reservedRoom',\n      'reservedRoomId',\n      'room',\n      'roomId',\n      'guestId',\n      'showAddGuest',\n      'readonly',\n      'expand',\n      'panel'\n    ]),\n    getGuestCounter () {\n      this.guestCounter = 0\n      this.reservedRoom.guestSet.forEach(guest => {\n        this.guestCounter++        \n      });\n    },\n    getCheckinStatus () {\n      this.confirmReserverGuestInRoom()\n      if(this.reservedRoom.checkIn === null) {\n        this.checkinStatus = false\n        return this.checkinStatusString = 'No realizado'\n      }\n      else {\n        this.checkinStatus = true\n        return this.checkinStatusString = 'Realizado'\n      }\n    },\n    getRoomType() {\n      if(this.room != null && this.room.roomType != null) {\n        /* Matrimonial */\n        if(this.room.roomType.id === 15) {\n          return 'Matrimonial (2)'\n        }\n        /* Presidencial */\n        else if(this.room.roomType.id === 16) {\n          return 'Presidencial (4)'\n        }\n        /* Triple */\n        else if(this.room.roomType.id === 14){\n          return 'Triple (3)'\n        }\n        /* Doble */\n        else if(this.room.roomType.id === 13){\n          return 'Doble (2)'\n        }\n        /* Simple */\n        else if(this.room.roomType.id === 12){\n          return 'Simple (1)'\n        }\n        else {\n          return 'Ha ocurrido un error'\n        }\n      }\n    },\n    guestId: {\n      get () {\n        return this.$store.state.guestId\n      },\n      set (payload) {\n        this.$store.commit('updateGuestId', payload)\n      }\n    },\n    room: {\n      get () {\n        return this.$store.state.room\n      },\n      set (payload) {\n        this.$store.commit('updateRoom', payload)\n      }\n    },\n    roomId: {\n      get () {\n        return this.$store.state.roomId\n      },\n      set (payload) {\n        this.$store.commit('updateRoomId', payload)\n      }\n    },\n    readonly: {\n      get () {\n        return this.$store.state.readonly\n      },\n      set (payload) {\n        this.$store.commit('updateReadonly', payload)\n      }\n    },\n    panel: {\n      get () {\n        return this.$store.state.panel\n      },\n      set (payload) {\n        this.$store.commit('updatePanel', payload)\n      }\n    },\n    reservedRoom: {\n      get () {\n        return this.$store.state.reservedRoom\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoom', payload)\n      }\n    },\n    reservedRoomId: {\n      get () {\n        return this.$store.state.reservedRoomId\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoomId', payload)\n      }\n    },\n    showAddGuest: {\n      get () {\n        return this.$store.state.showAddGuest\n      },\n      set (payload) {\n        this.$store.commit('updateShowAddGuest', payload)\n      }\n    },\n    expand: {\n      get () {\n        return this.$store.state.expand\n      },\n      set (payload) {\n        this.$store.commit('updateExpand', payload)\n      }\n    },\n  },\n}\n",{"version":3,"sources":["collapse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"collapse.vue","sourceRoot":"src/components/checkin","sourcesContent":["<template>\n  <div id=\"checkin-collapse\">\n    <v-layout align-center justify-end fill-height class=\"mb-3\">\n      <v-flex xs12 sm6 md3 order-md4 order-sm2>\n        <v-btn class=\"goBackButton\" color=\"info\" block :loading=\"loader\" @click=\"goBack\">\n          Volver\n          <v-icon dark>arrow_back</v-icon>\n        </v-btn>\n      </v-flex>\n    </v-layout>\n    <v-expansion-panel v-model=\"panel\" :readonly=\"readonly\" :expand=\"expand\" dark v-if=\"reservedRoom.reservation\">\n      <v-expansion-panel-content>\n        <template v-slot:header>\n          <div>Reservación a nombre de: {{ reservedRoom.reservation.guest.firstName + ' ' + reservedRoom.reservation.guest.lastName }}</div>\n          <div>Tipo de habitación: {{ getRoomType }}</div>\n          <div>Estado de check-in: {{ getCheckinStatus }}</div>\n          <v-btn v-show=\"isChecked()\" color=\"success\" round @click=\"editReservedRoom\">\n            Check-in\n            <v-icon dark class=\"ml-2\">playlist_add_check</v-icon>\n          </v-btn>\n          <v-btn v-show=\"!isChecked()\" color=\"warning\" round @click=\"editReservedRoom\">\n            Editar Check-in\n            <v-icon dark class=\"ml-3\">edit</v-icon>\n          </v-btn>\n        </template>\n        <v-card> \n          <v-layout align-center justify-space-around row fill-height>\n            <v-flex>\n              <v-card-text class=\"lighten-3\">Nombre: {{ reservedRoom.reservation.guest.firstName + ' ' + reservedRoom.reservation.guest.lastName }}</v-card-text>\n            </v-flex>\n            <v-flex>\n              <v-card-text class=\"lighten-3\">Fecha de nacimiento: {{ reservedRoom.reservation.guest.birthDate }}</v-card-text>\n            </v-flex>\n            <v-flex v-show=\"confirmButton\">\n              <v-card-text class=\"lighten-3\">\n                <v-btn color=\"success\" :disabled=\"!isChecked()\" block v-on:click=\"confirmReserverGuest(reservedRoom.reservation.guest.id)\">\n                  Confirmar\n                  <v-icon dark class=\"ml-1\">done</v-icon>\n                </v-btn>\n              </v-card-text>\n            </v-flex>\n            <v-flex v-show=\"!confirmButton\">\n              <v-card-text class=\"lighten-3\">\n                <v-btn color=\"red\" :disabled=\"!isChecked()\" block @click=\"unconfirmReserverGuest(reservedRoom.reservation.guest.id)\">\n                  Quitar\n                  <v-icon dark>delete</v-icon>\n                </v-btn>\n              </v-card-text>\n            </v-flex>\n          </v-layout>\n\n          <!-- Guests en la tabla intermedia -->\n          <div v-for=\"guest in reservedRoom.guestSet\" :key=\"guest.id\">\n            <v-layout align-center justify-space-around row fill-height v-show=\"compareGuest(guest.id)\">\n              <v-flex>\n                <v-card-text class=\"lighten-3\">Nombre: {{ guest.firstName + ' ' + guest.lastName }}</v-card-text>\n              </v-flex>\n              <v-flex>\n                <v-card-text class=\"lighten-3\">Fecha de nacimiento: {{ guest.birthDate }}</v-card-text>\n              </v-flex>\n              <v-flex>\n                <v-card-text class=\"lighten-3\">\n                  <v-btn color=\"red\" :disabled=\"!isChecked()\" block @click=\"deleteGuestFromRoom(guest.id)\">\n                    Quitar\n                    <v-icon dark>delete</v-icon>\n                  </v-btn>\n                </v-card-text>\n              </v-flex>\n            </v-layout>\n          </div>\n\n          <v-card-text class=\"lighten-3\">\n            <v-btn color=\"success\" :disabled=\"!shouldAddGuest()\" block @click=\"addNewGuest\">\n              Agregar un nuevo huésped\n              <v-icon dark class=\"ml-2\">person_add</v-icon>\n            </v-btn>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n    <guest-store v-show=\"showAddGuest\" :isReservation=\"false\" :isCheckin=\"true\"/>\n    <reservation-store v-show=\"showAddGuest\" :isCheckin=\"true\"/>\n  </div>\n</template>\n\n<script>\n\nimport moment from 'moment'\nimport { mapState, mapActions } from 'vuex'\nimport GuestStore from '@/components/guest/store'\nimport ReservationStore from '@/components/reservation/store'\n\nexport default {\n  name: 'checkin-collapse',\n  components: {\n    'guest-store': GuestStore,\n    'reservation-store': ReservationStore\n  },\n  data() {\n    return {\n      checkinStatusString: '',\n      addGuestButton: true,\n      checkinStatus: true,\n      checkinButton: true,\n      confirmButton: true,\n      guestCounter: 0\n    }\n  },\n  created () {\n    /* Restarting Variables */\n    this.checkinStatusString = ''\n    this.addGuestButton = true\n    this.checkinStatus = true\n    this.checkinButton = true\n    this.confirmButton = true\n    this.guestCounter = 0\n    this.reservedRoom = {}\n    this.reservedRoomId = ''\n    this.room = {}\n    this.roomId = ''\n    this.guestId = ''\n    this.showAddGuest = false\n    this.readonly = true\n    this.expand = true\n    this.panel = [ true ]\n    this.$store.commit('decryptReservedRoomId', this.$route.params.id)\n    this.getReservedRoom(this.reservedRoomId)\n  },\n  methods: {\n    ...mapActions([\n      'getReservedRoom',\n      'updateReservedRoom',\n      'updateHostedAt',\n      'deleteHostedAt',\n      'getRoom',\n      'goBack'\n    ]),\n    editReservedRoom () {\n      if (this.checkinButton) {\n        this.reservedRoom.checkIn = moment().format(\"YYYY-MM-DD\")\n        this.updateReservedRoom()\n        this.checkinButton = !this.checkinButton\n      }\n      else {\n        this.checkinButton = !this.checkinButton\n      }\n    },\n    confirmReserverGuest (payload) {\n      this.guestId = payload\n      if (this.confirmButton) {\n        this.updateHostedAt()\n        this.confirmButton = false\n      }\n      else {\n        this.updateHostedAt();\n        this.confirmButton = true\n      }\n    },\n    unconfirmReserverGuest (payload) {\n      this.guestId = payload\n      if (this.confirmButton) {\n        this.deleteHostedAt()\n        this.confirmButton = true\n      }\n      else {\n        this.deleteHostedAt();\n        this.confirmButton = false\n      }\n    },\n    deleteGuestFromRoom (payload) {\n      this.guestId = payload\n      this.deleteHostedAt()\n    },\n    compareGuest (payload) {\n      if (this.reservedRoom.reservation.guest.id === payload) {\n        return false\n      }\n      else {\n        return true\n      }\n    },\n    addNewGuest () {\n      this.$store.commit('updateCollapsePanel', false)\n    },\n    isChecked () {\n      console.log(!this.checkinButton);\n      console.log(this.checkinStatus);\n      console.log((!this.checkinButton && this.checkinStatus));\n      if (!this.checkinButton && this.checkinStatus) {\n        return true\n      }\n      else if(!this.checkinButton === false && this.checkinStatus === false) {\n        return true\n      }\n      else {\n        return false\n      }\n    },\n    shouldAddGuest () {\n      this.maxByRoomType()\n      if ((!this.checkinButton && this.checkinStatus) && this.addGuestButton) {\n        return true\n      }\n      else {\n        return false\n      }\n    },\n    maxByRoomType () {\n      if(this.room != null && this.room.roomType != null) {\n        this.getGuestCounter\n        /* Matrimonial */\n        if(this.room.roomType.id === 15) {\n          if (this.guestCounter === 2) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Presidencial */\n        else if(this.room.roomType.id === 16) {\n          if (this.guestCounter === 4) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Triple */\n        else if(this.room.roomType.id === 14){\n          if (this.guestCounter === 3) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Doble */\n        else if(this.room.roomType.id === 13){\n          if (this.guestCounter === 2) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        /* Simple */\n        else if(this.room.roomType.id === 12){\n          if (this.guestCounter === 1) {\n            this.addGuestButton = false\n          }\n          else {\n            this.addGuestButton = true\n          }\n        }\n        else {\n          this.addGuestButton = true\n        }\n      }\n    },\n    confirmReserverGuestInRoom () {\n      let reserverGuest = this.reservedRoom.guestSet.filter(guest => {\n            return (this.reservedRoom.reservation.guest.id === guest.id)\n          })\n      if(reserverGuest.length != 0){\n        this.confirmButton = false\n      }\n      else {\n        this.confirmButton = true\n      }\n    },\n  },\n  computed: {\n    ...mapState([\n      'loader',\n      'reservedRoom',\n      'reservedRoomId',\n      'room',\n      'roomId',\n      'guestId',\n      'showAddGuest',\n      'readonly',\n      'expand',\n      'panel'\n    ]),\n    getGuestCounter () {\n      this.guestCounter = 0\n      this.reservedRoom.guestSet.forEach(guest => {\n        this.guestCounter++        \n      });\n    },\n    getCheckinStatus () {\n      this.confirmReserverGuestInRoom()\n      if(this.reservedRoom.checkIn === null) {\n        this.checkinStatus = false\n        return this.checkinStatusString = 'No realizado'\n      }\n      else {\n        this.checkinStatus = true\n        return this.checkinStatusString = 'Realizado'\n      }\n    },\n    getRoomType() {\n      if(this.room != null && this.room.roomType != null) {\n        /* Matrimonial */\n        if(this.room.roomType.id === 15) {\n          return 'Matrimonial (2)'\n        }\n        /* Presidencial */\n        else if(this.room.roomType.id === 16) {\n          return 'Presidencial (4)'\n        }\n        /* Triple */\n        else if(this.room.roomType.id === 14){\n          return 'Triple (3)'\n        }\n        /* Doble */\n        else if(this.room.roomType.id === 13){\n          return 'Doble (2)'\n        }\n        /* Simple */\n        else if(this.room.roomType.id === 12){\n          return 'Simple (1)'\n        }\n        else {\n          return 'Ha ocurrido un error'\n        }\n      }\n    },\n    guestId: {\n      get () {\n        return this.$store.state.guestId\n      },\n      set (payload) {\n        this.$store.commit('updateGuestId', payload)\n      }\n    },\n    room: {\n      get () {\n        return this.$store.state.room\n      },\n      set (payload) {\n        this.$store.commit('updateRoom', payload)\n      }\n    },\n    roomId: {\n      get () {\n        return this.$store.state.roomId\n      },\n      set (payload) {\n        this.$store.commit('updateRoomId', payload)\n      }\n    },\n    readonly: {\n      get () {\n        return this.$store.state.readonly\n      },\n      set (payload) {\n        this.$store.commit('updateReadonly', payload)\n      }\n    },\n    panel: {\n      get () {\n        return this.$store.state.panel\n      },\n      set (payload) {\n        this.$store.commit('updatePanel', payload)\n      }\n    },\n    reservedRoom: {\n      get () {\n        return this.$store.state.reservedRoom\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoom', payload)\n      }\n    },\n    reservedRoomId: {\n      get () {\n        return this.$store.state.reservedRoomId\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoomId', payload)\n      }\n    },\n    showAddGuest: {\n      get () {\n        return this.$store.state.showAddGuest\n      },\n      set (payload) {\n        this.$store.commit('updateShowAddGuest', payload)\n      }\n    },\n    expand: {\n      get () {\n        return this.$store.state.expand\n      },\n      set (payload) {\n        this.$store.commit('updateExpand', payload)\n      }\n    },\n  },\n}\n</script>\n"]}]}