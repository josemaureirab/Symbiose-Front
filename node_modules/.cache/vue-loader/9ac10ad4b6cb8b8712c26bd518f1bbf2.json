{"remainingRequest":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/home/rack.vue?vue&type=style&index=0&id=497572b2&scoped=true&lang=css&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/home/rack.vue","mtime":1560899731292},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.hello {\n  width: 100%;\n  height: 500px;\n}\n",{"version":3,"sources":["rack.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA","file":"rack.vue","sourceRoot":"src/components/home","sourcesContent":["<template>\n  <v-container>\n  <div class=\"hello\" ref=\"chartdiv\">    \n  </div>\n  </v-container>\n</template>\n\n<script>\n\nimport { mapActions, mapState } from 'vuex';\n/*Bibliotecas del rack*/\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nexport default {\n  name: 'Rack',\n  data () {\n    return {\n      //\n    }\n\t},  \n  mounted() {\n    /*Chart init*/\n    var chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n    chart.paddingRight = 30;\n    chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\n\n    /*Color est√°tico*/\n    var colorSet = new am4core.ColorSet();\n    colorSet.saturation = 1.5;\n\n    /*Data source*/\n    chart.dataSource.url = this.serverURL + '/rack/';\n    //chart.dataSource.reloadFrequency = 1000;\n    chart.dataSource.incremental = true;\n    chart.dataSource.load();\n    chart.dataSource.parser = new am4core.JSONParser();\n    chart.dataSource.parser.options.emptyAs = 0;\n    \n    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"roomNumber\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.inversed = true;\n\n    /*Datos de tiempo*/ \n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n    dateAxis.renderer.minGridDistance = 50;\n    dateAxis.baseInterval = { count: 1, timeUnit: \"day\" };\n    dateAxis.min = new Date().getTime();\n    dateAxis.max = new Date(2025, 0, 1, 24, 0, 0, 0).getTime();\n    dateAxis.strictMinMax = true;\n    dateAxis.renderer.tooltipLocation = 0;\n\n    /*Barrita con info (mouseIn)*/ \n    var series1 = chart.series.push(new am4charts.ColumnSeries());\n    series1.columns.template.width = am4core.percent(80);\n    series1.columns.template.tooltipText = \"{firstNameGuest} {lastNameGuest} - Desde: {dateIn} / Hasta: {dateOut}\";    \n   \n    /*Barra de reserva*/\n    series1.dataFields.openDateX = \"dateIn\";\n    series1.dataFields.dateX = \"dateOut\";\n    series1.dataFields.categoryY = \"roomNumber\";\n    series1.fill = am4core.color(\"red\").lighten(0.0);\n    series1.stroke = am4core.color(\"red\").lighten(0.0);\n/*    series1.columns.template.propertyFields.fill = \"color\"; // get color from data\n    series1.columns.template.propertyFields.stroke = \"color\";*/\n    series1.columns.template.strokeOpacity = 1;\n\n    /*Scrollbar's*/ \n    chart.scrollbarX = new am4core.Scrollbar();\n    chart.scrollbarY = new am4core.Scrollbar();\n  },\n  computed: {\n    ...mapState([\n      'serverURL',\n    ]),\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.hello {\n  width: 100%;\n  height: 500px;\n}\n</style>"]}]}