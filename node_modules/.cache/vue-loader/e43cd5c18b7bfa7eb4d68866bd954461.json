{"remainingRequest":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/guest/update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/guest/update.vue","mtime":1560263460550},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapState, mapActions } from 'vuex';\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email } from 'vuelidate/lib/validators'\n\nexport default {\n\tname: 'guest-store',\n\tdata(){\n\t\treturn{\n\t\t\tdate: '',\n      menu: '',\n      checkbox: '',\n      dictionary: {\n        custom: {\n          firstName: {\n            required: () => 'El campo nombre no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },\n          lastName: {\n            required: () => 'El campo apellido no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },\n          email: {\n            required: () => 'El campo e-mail no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo e-mail no puede ser mayor a 30'\n            // custom messages\n          },          \n          select: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    }\n  },\n  mixins: [validationMixin],\n  validations: {\n    checkbox: {\n      checked (val) {\n        return val\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  }, \n  created() {\n    console.log(this.$route.params.id)\n    this.$store.commit('decryptGuestId', this.$route.params.id)\n    this.getGuest(this.guestId);\n  },\n  mounted() {\n    this.$validator.localize('en', this.dictionary)\n  },\n\tmethods: {\n    ...mapActions([\n      'getGuest',\n      'updateGuest',\n      'goBack'\n    ]),\n    goBackAndClear() {\n      this.goBack();\n      this.clear();\n    },\n    submit () {\n\t\t\tthis.$validator.validateAll()\n\t\t\tconsole.log(this.guest.firstName, this.guest.lastName, this.guest.birthDate);\n    },\n    clear () {\n      this.guest.firstName = ''\n      this.guest.lastName = ''\n      this.guest.email = ''\n\t\t\tthis.guest.birthDate = null\n      this.checkbox = null\n      this.$validator.reset()\n    }\n\t},\n\tcomputed: {\n    ...mapState([\n      'serverURL',\n      'loader',\n      'updateGuestSuccess',\n      'updateGuestError',\n      'guest',\n      'guestId',\n    ]),\n    guestId: {\n      get () {\n        return this.$store.state.guestId;\n      },\n      set (payload) {\n        this.$store.commit('updateGuestId', payload)\n      }\n    },\n    checkboxErrors () {\n      const errors = []\n      if (!this.$v.checkbox.$dirty) return errors\n      !this.$v.checkbox.checked && errors.push('La confirmación es requerida  ')\n      return errors\n    }\n  },\n}\n",{"version":3,"sources":["update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"update.vue","sourceRoot":"src/components/guest","sourcesContent":["<template>\n  <div class=\"guests\">\n    <v-container fluid>\n      <v-alert\n        :value=\"updateGuestSuccess\"\n        color=\"success\"\n        icon=\"check_circle\"\n        outline\n        dismissible\n      >\n        El huésped ha sido actualizado con éxito.\n      </v-alert>\n      <v-alert\n        :value=\"updateGuestError\"\n        color=\"error\"\n        icon=\"warning\"\n        outline\n        dismissible\n      >\n        Ha ocurrido un error al actualizar al huésped.\n      </v-alert>\n      <form @submit.prevent=\"updateGuest(guest)\">\n        <v-text-field\n          v-model=\"guest.firstName\"\n          v-validate=\"'required|max:20'\"\n          :counter=\"20\"\n          :error-messages=\"errors.collect('firstName')\"\n          :placeholder=\"guest.firstName\"\n          data-vv-name=\"firstName\"\n          required\n        ></v-text-field>\n        <v-text-field\n          v-model=\"guest.lastName\"\n          v-validate=\"'required|max:20'\"\n          :counter=\"20\"\n          :error-messages=\"errors.collect('lastName')\"\n          :placeholder=\"guest.lastName\"\n          data-vv-name=\"lastName\"\n          required\n        ></v-text-field>\n        <!-- <v-text-field\n          v-model=\"email\"\n          v-validate=\"'required|max:30'\"\n          :counter=\"30\"\n          :error-messages=\"errors.collect('email')\"\n          :rules=\"emailRules\"\n          label=\"E-mail\"\n          data-vv-name=\"email\"\n          required\n        ></v-text-field> -->\n        <v-layout row wrap>\n          <v-flex xs12 sm6 md4>\n            <v-menu\n              ref=\"menu\"\n              v-model=\"menu\"\n              :close-on-content-click=\"false\"\n              :nudge-right=\"40\"\n              :return-value.sync=\"date\"\n              lazy\n              transition=\"scale-transition\"\n              offset-y\n              full-width\n              min-width=\"290px\"\n            >\n              <template v-slot:activator=\"{ on }\">\n                <v-text-field\n                  v-model=\"guest.birthDate\"\n                  label=\"Fecha de nacimiento\"\n                  prepend-icon=\"event\"\n                  readonly\n                  v-on=\"on\"\n                ></v-text-field>\n              <v-checkbox\n                v-model=\"checkbox\"\n                :error-messages=\"checkboxErrors\"\n                label=\"Confirmar\"\n                required\n                @change=\"$v.checkbox.$touch()\"\n                @blur=\"$v.checkbox.$touch()\"\n              ></v-checkbox>                \n              </template>\n              <v-date-picker v-model=\"guest.birthDate\" no-title required scrollable>\n                <v-spacer></v-spacer>\n                <v-btn flat color=\"primary\" @click=\"menu = false\">Cancel</v-btn>\n                <v-btn flat color=\"primary\" @click=\"$refs.menu.save(date)\">OK</v-btn>\n              </v-date-picker>\n            </v-menu>\n          </v-flex>\n        </v-layout>\n          <v-btn round color=\"success\" dark :loading=\"loader\" type=\"submit\">\n            <span>Guardar cambios</span>\n            <v-icon dark class=\"save-icon\">save</v-icon>\n          </v-btn>\n\n          <v-btn round @click=\"clear\" color=\"warning\">\n            Limpiar \n            <v-icon dark>clear</v-icon>\n          </v-btn>\n\n          <v-btn round color=\"info\" @click=\"goBackAndClear\" :loading=\"loader\">\n            <span>Volver</span>\n            <v-icon dark >keyboard_backspace</v-icon>\n          </v-btn> \n      </form>\n    </v-container>\n  </div>\n</template>\n\n<script>\n\nimport { mapState, mapActions } from 'vuex';\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email } from 'vuelidate/lib/validators'\n\nexport default {\n\tname: 'guest-store',\n\tdata(){\n\t\treturn{\n\t\t\tdate: '',\n      menu: '',\n      checkbox: '',\n      dictionary: {\n        custom: {\n          firstName: {\n            required: () => 'El campo nombre no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },\n          lastName: {\n            required: () => 'El campo apellido no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },\n          email: {\n            required: () => 'El campo e-mail no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo e-mail no puede ser mayor a 30'\n            // custom messages\n          },          \n          select: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    }\n  },\n  mixins: [validationMixin],\n  validations: {\n    checkbox: {\n      checked (val) {\n        return val\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  }, \n  created() {\n    console.log(this.$route.params.id)\n    this.$store.commit('decryptGuestId', this.$route.params.id)\n    this.getGuest(this.guestId);\n  },\n  mounted() {\n    this.$validator.localize('en', this.dictionary)\n  },\n\tmethods: {\n    ...mapActions([\n      'getGuest',\n      'updateGuest',\n      'goBack'\n    ]),\n    goBackAndClear() {\n      this.goBack();\n      this.clear();\n    },\n    submit () {\n\t\t\tthis.$validator.validateAll()\n\t\t\tconsole.log(this.guest.firstName, this.guest.lastName, this.guest.birthDate);\n    },\n    clear () {\n      this.guest.firstName = ''\n      this.guest.lastName = ''\n      this.guest.email = ''\n\t\t\tthis.guest.birthDate = null\n      this.checkbox = null\n      this.$validator.reset()\n    }\n\t},\n\tcomputed: {\n    ...mapState([\n      'serverURL',\n      'loader',\n      'updateGuestSuccess',\n      'updateGuestError',\n      'guest',\n      'guestId',\n    ]),\n    guestId: {\n      get () {\n        return this.$store.state.guestId;\n      },\n      set (payload) {\n        this.$store.commit('updateGuestId', payload)\n      }\n    },\n    checkboxErrors () {\n      const errors = []\n      if (!this.$v.checkbox.$dirty) return errors\n      !this.$v.checkbox.checked && errors.push('La confirmación es requerida  ')\n      return errors\n    }\n  },\n}\n</script>\n\n\n\n<style scoped>\n  .save-icon {\n    margin-left: 2% !important;\n  }\n</style>"]}]}