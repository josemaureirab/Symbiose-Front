{"remainingRequest":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/guest/store.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/guest/store.vue","mtime":1560899731290},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport moment from 'moment'\nimport GuestAlert from '@/components/guest/alert'\nimport { mapState, mapActions, mapMutations } from 'vuex'\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email } from 'vuelidate/lib/validators'\n\nexport default {\n  name: 'guest-store',\n  components: {\n    'guest-alert': GuestAlert\n  },\n  props: [\n    'guests',\n    'isReservation',\n    'isCheckin'\n    ],\n\tdata(){\n\t\treturn{\n      today: '',\n\t\t\tdate: '',\n      menu: '',\n      checkbox: '',\n      dictionary: {\n        custom: {\n          firstName: {\n            required: () => 'El campo nombre puede estar vacío',\n            max: 'La cantidad de caracteres en el campo nombre no puede ser mayor a 20'\n            // custom messages\n          },\n          lastName: {\n            required: () => 'El campo apellido no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo apellido no puede ser mayor a 20'\n            // custom messages\n          },\n          email: {\n            required: () => 'El campo e-mail no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo e-mail no puede ser mayor a 30'\n            // custom messages\n          },              \n          select: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    }\n  },\n  mixins: [validationMixin],\n  validations: {\n    checkbox: {\n      checked (val) {\n        return val\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  }, \n  created() {\n    this.today = moment().format(\"YYYY-MM-DD\").toString();\n  }, \n  mounted() {\n    this.$validator.localize('en', this.dictionary)\n  },\n\tmethods: {\n    ...mapActions([\n      'storeGuest',\n      'updateHostedAt'\n    ]),\n    ...mapMutations([\n      'updateClientSelect'\n    ]),\n    submit () {\n\t\t\tthis.$validator.validateAll()\n    },\n    clear () {\n      this.guest.firstName = ''\n      this.guest.lastName = ''\n      this.guest.email = ''      \n      this.guest.birthDate = null\n      this.checkbox = null\n      this.$validator.reset()\n    },\n    storeGuestCall (payload) {\n      if (this.isCheckin) {\n        this.guestId = this.guest.id\n        this.updateHostedAt()\n        this.$store.commit('updateCollapsePanel', true)\n      }\n      else {\n        this.storeGuest(payload)\n      }\n    }\n\t},\n\tcomputed: {\n    ...mapState([\n      'serverURL',\n      'guest',\n      'guestId',\n      'loader',\n      'clientSelect'\n    ]),\n    guest: {\n      get () {\n        return this.$store.state.guest;\n      },\n      set (payload) {\n        this.$store.commit('updateGuest', payload)\n      }\n    },\n    guestId: {\n      get () {\n        return this.$store.state.guestId\n      },\n      set (payload) {\n        this.$store.commit('updateGuestId', payload)\n      }\n    },\n    checkboxErrors () {\n      const errors = []\n      if (!this.$v.checkbox.$dirty) return errors\n      !this.$v.checkbox.checked && errors.push('You must agree to continue!')\n      return errors\n    },\n    selectErrors () {\n      const errors = []\n      if (!this.$v.select.$dirty) return errors\n      !this.$v.select.required && errors.push('Item is required')\n      return errors\n    },\n    nameErrors () {\n      const errors = []\n      if (!this.$v.name.$dirty) return errors\n      !this.$v.name.maxLength && errors.push('El nombre debe contener al menos 10 carácteres')\n      !this.$v.name.required && errors.push('El nombre es requerido.')\n      return errors\n    },\n    emailErrors () {\n      const errors = []\n      if (!this.$v.email.$dirty) return errors\n      !this.$v.email.email && errors.push('Debe ser una dirección de corre válida')\n      !this.$v.email.required && errors.push('El e-mail es requerido')\n      return errors\n    }  \n  } \n}\n",{"version":3,"sources":["store.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"store.vue","sourceRoot":"src/components/guest","sourcesContent":["<template>\n  <div id=\"guest-store\">\n    <v-container fluid>\n      <form @submit.prevent=\"storeGuestCall(isReservation)\">\n        <v-text-field\n          v-model=\"guest.firstName\"\n          v-validate=\"'required|max:20'\"\n          :counter=\"20\"\n          :error-messages=\"errors.collect('firstName')\"\n          label=\"Nombre\"\n          data-vv-name=\"firstName\"\n          required\n        ></v-text-field>\n        <v-text-field\n          v-model=\"guest.lastName\"\n          v-validate=\"'required|max:20'\"\n          :counter=\"20\"\n          :error-messages=\"errors.collect('lastName')\"\n          label=\"Apellido\"\n          data-vv-name=\"lastName\"\n          required\n        ></v-text-field>\n        <!-- <v-text-field\n          v-model=\"email\"\n          v-validate=\"'required|max:30'\"\n          :counter=\"30\"\n          :error-messages=\"errors.collect('email')\"\n          :rules=\"emailRules\"\n          label=\"E-mail\"\n          data-vv-name=\"email\"\n          required\n        ></v-text-field> -->\n        <v-layout row wrap>\n          <v-flex xs12 sm6 md4>\n            <v-menu\n              ref=\"menu\"\n              v-model=\"menu\"\n              :close-on-content-click=\"false\"\n              :nudge-right=\"40\"\n              :return-value.sync=\"date\"\n              lazy\n              :max=\"today\"\n              transition=\"scale-transition\"\n              offset-y\n              full-width\n              min-width=\"290px\"\n            >\n              <template v-slot:activator=\"{ on }\">\n                <v-text-field\n                  v-model=\"guest.birthDate\"\n                  :max=\"today\"\n                  label=\"Fecha de nacimiento\"\n                  prepend-icon=\"event\"\n                  readonly\n                  v-on=\"on\"\n                ></v-text-field>\n              <v-checkbox\n                v-model=\"checkbox\"\n                :error-messages=\"checkboxErrors\"\n                label=\"Confirmar\"\n                required\n                @change=\"$v.checkbox.$touch()\"\n                @blur=\"$v.checkbox.$touch()\"\n              ></v-checkbox>                \n              </template>\n              <v-date-picker v-model=\"guest.birthDate\" :max=\"today\" no-title required scrollable>\n                <v-spacer></v-spacer>\n                <v-btn flat color=\"primary\" @click=\"menu = false\">Cancel</v-btn>\n                <v-btn flat color=\"primary\" @click=\"$refs.menu.save(date)\">OK</v-btn>\n              </v-date-picker>\n            </v-menu>\n          </v-flex>\n        </v-layout>\n        <v-btn round type=\"submit\" dark color=\"success\" :loading=\"loader\">\n          <span>Guardar</span>\n          <v-icon dark class=\"save-icon\">save</v-icon>\n        </v-btn>\n        <v-btn round @click=\"clear\" color=\"warning\">Limpiar <v-icon dark>clear</v-icon></v-btn>\n        <v-btn round dark v-if=\"isReservation && !clientSelect\" @click=\"updateClientSelect(!clientSelect)\" color=\"info\"> Cliente registrado <v-icon dark>how_to_reg</v-icon></v-btn>\n        <v-btn round dark v-if=\"clientSelect\" @click=\"updateClientSelect(!clientSelect)\" color=\"red\"> Cancelar <v-icon dark>clear</v-icon></v-btn>       \n      </form>\n    <guest-alert text=\"El huésped ha sido añadido satisfactoriamente\" color=\"success\" :timeout=\"2250\"/>\n    </v-container>\n  </div>\n</template>\n\n<script>\n\nimport moment from 'moment'\nimport GuestAlert from '@/components/guest/alert'\nimport { mapState, mapActions, mapMutations } from 'vuex'\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email } from 'vuelidate/lib/validators'\n\nexport default {\n  name: 'guest-store',\n  components: {\n    'guest-alert': GuestAlert\n  },\n  props: [\n    'guests',\n    'isReservation',\n    'isCheckin'\n    ],\n\tdata(){\n\t\treturn{\n      today: '',\n\t\t\tdate: '',\n      menu: '',\n      checkbox: '',\n      dictionary: {\n        custom: {\n          firstName: {\n            required: () => 'El campo nombre puede estar vacío',\n            max: 'La cantidad de caracteres en el campo nombre no puede ser mayor a 20'\n            // custom messages\n          },\n          lastName: {\n            required: () => 'El campo apellido no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo apellido no puede ser mayor a 20'\n            // custom messages\n          },\n          email: {\n            required: () => 'El campo e-mail no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo e-mail no puede ser mayor a 30'\n            // custom messages\n          },              \n          select: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    }\n  },\n  mixins: [validationMixin],\n  validations: {\n    checkbox: {\n      checked (val) {\n        return val\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  }, \n  created() {\n    this.today = moment().format(\"YYYY-MM-DD\").toString();\n  }, \n  mounted() {\n    this.$validator.localize('en', this.dictionary)\n  },\n\tmethods: {\n    ...mapActions([\n      'storeGuest',\n      'updateHostedAt'\n    ]),\n    ...mapMutations([\n      'updateClientSelect'\n    ]),\n    submit () {\n\t\t\tthis.$validator.validateAll()\n    },\n    clear () {\n      this.guest.firstName = ''\n      this.guest.lastName = ''\n      this.guest.email = ''      \n      this.guest.birthDate = null\n      this.checkbox = null\n      this.$validator.reset()\n    },\n    storeGuestCall (payload) {\n      if (this.isCheckin) {\n        this.guestId = this.guest.id\n        this.updateHostedAt()\n        this.$store.commit('updateCollapsePanel', true)\n      }\n      else {\n        this.storeGuest(payload)\n      }\n    }\n\t},\n\tcomputed: {\n    ...mapState([\n      'serverURL',\n      'guest',\n      'guestId',\n      'loader',\n      'clientSelect'\n    ]),\n    guest: {\n      get () {\n        return this.$store.state.guest;\n      },\n      set (payload) {\n        this.$store.commit('updateGuest', payload)\n      }\n    },\n    guestId: {\n      get () {\n        return this.$store.state.guestId\n      },\n      set (payload) {\n        this.$store.commit('updateGuestId', payload)\n      }\n    },\n    checkboxErrors () {\n      const errors = []\n      if (!this.$v.checkbox.$dirty) return errors\n      !this.$v.checkbox.checked && errors.push('You must agree to continue!')\n      return errors\n    },\n    selectErrors () {\n      const errors = []\n      if (!this.$v.select.$dirty) return errors\n      !this.$v.select.required && errors.push('Item is required')\n      return errors\n    },\n    nameErrors () {\n      const errors = []\n      if (!this.$v.name.$dirty) return errors\n      !this.$v.name.maxLength && errors.push('El nombre debe contener al menos 10 carácteres')\n      !this.$v.name.required && errors.push('El nombre es requerido.')\n      return errors\n    },\n    emailErrors () {\n      const errors = []\n      if (!this.$v.email.$dirty) return errors\n      !this.$v.email.email && errors.push('Debe ser una dirección de corre válida')\n      !this.$v.email.required && errors.push('El e-mail es requerido')\n      return errors\n    }  \n  } \n}\n</script>\n\n<style scoped>\n  .save-icon {\n    margin-left: 3% !important;\n  }\n</style>\n"]}]}