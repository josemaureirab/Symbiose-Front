{"remainingRequest":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/checkout/show.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/checkout/show.vue","mtime":1560899731290},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport CheckoutInfo from '@/components/checkout/info'\nimport { mapActions, mapState } from 'vuex';\n\nexport default {\n  name: 'checkout-show',\n  components: {\n    'checkout-info': CheckoutInfo,\n  },\n  data () {\n    return {\n\n    }\n  },\n  created() {\n\n  },\n\tmethods: {\n\n  },\n  computed: {\n    ...mapState([\n      'reservedRoom',\n      'reservedRooms'\n    ]),\n    filteredReservedRooms () {\n      if(this.reservedRooms != null){\n        const filteredReservedRooms = this.reservedRooms.filter(reservedRoom => {\n          return (reservedRoom.dateIni != null)\n        })\n        return filteredReservedRooms\n      }\n    },\n    reservedRoom: {\n      get () {\n        return this.$store.state.reservedRoom;\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoom', payload)\n      }\n    },\n    reservedRooms: {\n      get () {\n        return this.$store.state.reservedRooms;\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRooms', payload)\n      }\n    },\n  }\t\n}\n",{"version":3,"sources":["show.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"show.vue","sourceRoot":"src/components/checkout","sourcesContent":["<template>\n  <div>\n    <v-container fluid>\n    <form>\n        <v-autocomplete\n            label=\"Selecciona al cliente\"\n            :items=\"filteredReservedRooms\"\n            v-model=\"reservedRoom\"\n            item-text=\"`${data.item.room.number}, ${data.item.reservation.guest.firstName + ' ' + data.item.reservation.guest.lastName}`\"\n            item-value=\"`${data.item}`\"\n            :menu-props=\"{maxHeight:'auto'}\"\n            no-data-text=\"No se encuentran habitaciones reservadas\"\n          >\n            <template slot=\"selection\" slot-scope=\"data\" v-show=\"!data.item.dateIni === null\">\n              {{data.item.room.number}}, {{data.item.reservation.guest.firstName + ' ' + data.item.reservation.guest.lastName}}\n            </template>\n            <template slot=\"item\" slot-scope=\"data\">\n              <v-list-tile-content>\n                <v-list-tile-title v-html=\"`${data.item.room.number}, ${data.item.reservation.guest.firstName + ' ' + data.item.reservation.guest.lastName}`\">\n                </v-list-tile-title>\n              </v-list-tile-content>\n            </template>\n          </v-autocomplete>\n           \n      </form>\n    <checkout-info v-if=\"reservedRoom != null\"/>\n    </v-container>\n  </div>        \n</template>\n\n<script>\n\nimport CheckoutInfo from '@/components/checkout/info'\nimport { mapActions, mapState } from 'vuex';\n\nexport default {\n  name: 'checkout-show',\n  components: {\n    'checkout-info': CheckoutInfo,\n  },\n  data () {\n    return {\n\n    }\n  },\n  created() {\n\n  },\n\tmethods: {\n\n  },\n  computed: {\n    ...mapState([\n      'reservedRoom',\n      'reservedRooms'\n    ]),\n    filteredReservedRooms () {\n      if(this.reservedRooms != null){\n        const filteredReservedRooms = this.reservedRooms.filter(reservedRoom => {\n          return (reservedRoom.dateIni != null)\n        })\n        return filteredReservedRooms\n      }\n    },\n    reservedRoom: {\n      get () {\n        return this.$store.state.reservedRoom;\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoom', payload)\n      }\n    },\n    reservedRooms: {\n      get () {\n        return this.$store.state.reservedRooms;\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRooms', payload)\n      }\n    },\n  }\t\n}\n</script>"]}]}