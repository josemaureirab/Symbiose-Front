{"remainingRequest":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/checkin/show.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/src/components/checkin/show.vue","mtime":1560899731287},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/ProyectoTingesoFrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport router from '@/router'\nimport moment from 'moment'\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'checkin-show',\n  data() {\n    return {\n      loading: false,\n      headers: [\n        { text: 'Reservante', value: 'guest.firstName', sortable:false, align: 'center' },\n        { text: 'Check-In', value: 'calories', sortable:false, align: 'center' },\n        { text: 'Check-out', value: 'fat', sortable:false, align: 'center' },\n        { text: '', value: 'carbs', sortable:false, align: 'center' },\n      ],\n    }\n  },\n  watch: {\n    pagination: {\n      handler () {\n        this.loading = true\n        this.$store.dispatch('queryItems', this.searchReservedRoom)\n          .then(result => {\n            this.loading = false\n          })\n      },\n      deep: true\n    }\n  },\n  methods: {\n    ...mapActions([\n      'queryItems'\n    ]),\n    getFiltredReservedRooms() {\n      this.$store.dispatch('queryItems', this.reservedRoom)\n    },\n    toCheckin(payload) {\n      this.$store.commit('encryptReservedRoomId', payload)\n      router.push({ name: 'checkin_create', params: { id: this.reservedRoomId } })\n    },\n    formatDate(payload) {\n      if (payload != null) {\n        return moment(payload).format(\"YYYY-MM-DD\");\n      }\n    },\n  },\n  computed: {\n    ...mapState([\n      'reservedRooms',\n      'searchReservedRoom',\n      'reservedRoom',\n      'reservedRoomId'\n    ]),\n    pagination: {\n      get: function () {\n        return this.$store.getters.pagination\n      },\n      set: function (value) {\n        this.$store.commit('setPagination', value)\n      }\n    },\n    reservedRoomId: {\n      get () {\n        return this.$store.state.reservedRoomId;\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoomId', payload)\n      }\n    },\n    reservedRoom: {\n      get: function () {\n        return this.$store.state.reservedRoom\n      },\n      set: function (value) {\n        this.$store.commit('updateReservedRoom', value)\n      }\n    },\n    reservedRooms: {\n      get: function () {\n        return this.$store.state.reservedRooms\n      },\n      set: function (value) {\n        this.$store.commit('updateReservedRooms', value)\n      }\n    },\n    searchReservedRoom: {\n      get: function () {\n        return this.$store.state.searchReservedRoom\n      },\n      set: function (value) {\n        this.$store.commit('updateSearchReservedRoom', value)\n      }\n    },\n    items () {\n      return this.$store.getters.items\n    }\n  },\n}\n",{"version":3,"sources":["show.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"show.vue","sourceRoot":"src/components/checkin","sourcesContent":["<template>\n  <div id=\"inspire\">\n    <v-layout align-center justify-end fill-height class=\"mb-3\">\n      <v-flex xs12 sm6 md3>\n        <v-text-field\n          label=\"Buscar Reserva\"\n          v-model=\"searchReservedRoom\"\n          v-on:keyup=\"getFiltredReservedRooms\"\n          placeholder=\"Nombre del reservante\"\n        ></v-text-field>\n      </v-flex>\n    </v-layout>\n    <v-data-table\n      dark\n      must-sort\n      :headers=\"headers\"\n      :pagination.sync=\"pagination\"\n      :rows-per-page-items=\"pagination.rowsPerPageItems\"\n      :total-items=\"pagination.totalItems\"\n      :loading=\"loading\"\n      :items=\"items\"\n      class=\"elevation-1\"\n    >\n      <template slot=\"items\" slot-scope=\"props\" v-if=\"props.item.dateIni != null\">\n        <td class=\"text-xs-center\">{{ props.item.reservation.guest.firstName + ' ' + props.item.reservation.guest.lastName }}</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkIn != null\">{{ formatDate(props.item.checkIn) }}</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkIn === null\">No hay datos asociados</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkOut != null\">{{ formatDate(props.item.checkOut) }}</td>\n        <td class=\"text-xs-center\" v-show=\"props.item.checkOut === null\">No hay datos asociados</td>\n        <td class=\"text-xs-center\">\n          <v-btn color=\"success\" round type=\"submit\" @click=\"toCheckin(props.item.id)\">\n            <span>Seleccionar</span><v-icon>check</v-icon>\n          </v-btn>\n        </td>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\n\nimport router from '@/router'\nimport moment from 'moment'\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'checkin-show',\n  data() {\n    return {\n      loading: false,\n      headers: [\n        { text: 'Reservante', value: 'guest.firstName', sortable:false, align: 'center' },\n        { text: 'Check-In', value: 'calories', sortable:false, align: 'center' },\n        { text: 'Check-out', value: 'fat', sortable:false, align: 'center' },\n        { text: '', value: 'carbs', sortable:false, align: 'center' },\n      ],\n    }\n  },\n  watch: {\n    pagination: {\n      handler () {\n        this.loading = true\n        this.$store.dispatch('queryItems', this.searchReservedRoom)\n          .then(result => {\n            this.loading = false\n          })\n      },\n      deep: true\n    }\n  },\n  methods: {\n    ...mapActions([\n      'queryItems'\n    ]),\n    getFiltredReservedRooms() {\n      this.$store.dispatch('queryItems', this.reservedRoom)\n    },\n    toCheckin(payload) {\n      this.$store.commit('encryptReservedRoomId', payload)\n      router.push({ name: 'checkin_create', params: { id: this.reservedRoomId } })\n    },\n    formatDate(payload) {\n      if (payload != null) {\n        return moment(payload).format(\"YYYY-MM-DD\");\n      }\n    },\n  },\n  computed: {\n    ...mapState([\n      'reservedRooms',\n      'searchReservedRoom',\n      'reservedRoom',\n      'reservedRoomId'\n    ]),\n    pagination: {\n      get: function () {\n        return this.$store.getters.pagination\n      },\n      set: function (value) {\n        this.$store.commit('setPagination', value)\n      }\n    },\n    reservedRoomId: {\n      get () {\n        return this.$store.state.reservedRoomId;\n      },\n      set (payload) {\n        this.$store.commit('updateReservedRoomId', payload)\n      }\n    },\n    reservedRoom: {\n      get: function () {\n        return this.$store.state.reservedRoom\n      },\n      set: function (value) {\n        this.$store.commit('updateReservedRoom', value)\n      }\n    },\n    reservedRooms: {\n      get: function () {\n        return this.$store.state.reservedRooms\n      },\n      set: function (value) {\n        this.$store.commit('updateReservedRooms', value)\n      }\n    },\n    searchReservedRoom: {\n      get: function () {\n        return this.$store.state.searchReservedRoom\n      },\n      set: function (value) {\n        this.$store.commit('updateSearchReservedRoom', value)\n      }\n    },\n    items () {\n      return this.$store.getters.items\n    }\n  },\n}\n</script>\n\n<style>\n\n</style>\n"]}]}