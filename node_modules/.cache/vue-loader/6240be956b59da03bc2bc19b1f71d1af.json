{"remainingRequest":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/room/roomUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/src/components/room/roomUpdate.vue","mtime":1560263460554},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josemaureirabadilla/Desktop/Symbiose-FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* eslint-disable */\n\nimport axios from 'axios';\nimport moment from 'moment'; // Trabajo del tipo de dato Date (fechas).\nimport router from '@/router';\nimport { mapState } from 'vuex';\nimport { round } from '@amcharts/amcharts4/.internal/core/utils/Math';\nimport Vue from 'vue';\nimport VeeValidate from 'vee-validate';\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email } from 'vuelidate/lib/validators'\n\nVue.use(VeeValidate);\n\nexport default {\n\tname: 'RoomsAdd',\n\tcomponents: {\n\n  },\n\n  mixins: [validationMixin],\n\n  validations: {\n    checkbox: {\n      checked (val) {\n        return val\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  },  \n\tdata(){\n\t\treturn{\n\t\t\troom: {},\n      number: '',\n      smoke: '',\n      status: '',\n      newSmoke: '',\n      checkbox: '',\n\t\t\troomType: '',\n      items: [\n        'Disponible',\n\t\t\t\t'Reservada',\n\t\t\t\t'En mantención',\n\t\t\t\t'Ocupada'\n      ],\n      itemsH: [\n        'Sí',\n        'No'\n      ],      \t\t\t\n      dictionary: {\n        custom: {\n          number: {\n            required: () => 'El campo número no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },            \n          status: {\n            required: () => 'Debe elegir una opción',\n            // custom messages\n          },         \n          checkbox: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    }\n\t},\n  created() {\n    this.getRoom(this.$route.params.id);\n  },\n  mounted() {\n    this.$validator.localize('en', this.dictionary)\n  },\n\tmethods: {\n    getRoom(id) {\n      try {\n        axios\n          .get(this.serverURL + `/rooms/${id}`)\n          .then(response => {\n            var room = response.data;\n            var newSmoke = '';\n            if (room.smoke === true) {\n              newSmoke = 'Sí';\n            }\n            else{\n              newSmoke = 'No';\n            }\n            if (room) {\n              this.room = {\n                number: room.number,\n\t\t\t\t\t\t\t\tstatus: room.status,\n                smoke: room.smoke\t\t\t\t\t\t\n              }\n                this.number = room.number,\n\t\t\t\t\t\t\t\tthis.status = room.status,\n                this.smoke = newSmoke\t\n            }\n            else {\n              console.log('No hay habitaciones o no se puede acceder a ellas');\n            }\n          })\n          .catch(e => {\n            console.log(e.response);\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    editRoom(id, payload) {\n      this.loader = true;\n      var newSmoke = '';\n\t\t\tif (payload.smoke === 'Sí') {\n\t\t\t\tnewSmoke = true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnewSmoke = false;\n\t\t\t}\n      this.room = {\n        number: payload.number,\n        status: payload.status,\n        smoke: newSmoke,\n      }\n      try { \n        axios\n          .put(this.serverURL + `/rooms/edit/${this.$route.params.id}`, this.room)\n          .then(response => {\n              this.loader = false;\n              router.push({ name: 'rooms' })\n              this.loader = false;\n              console.log('La habitación ha sido actualizada.');\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    changeLoader(payload){\n\t\t\tthis.loader = payload;\n    },\n    submit () {\n      this.$validator.validateAll()\n    },\n    clear () {\n      this.number = ''\n      this.status = null\n      this.smoke = null\n      this.checkbox = null\n      this.$validator.reset()\n    }\n\t},\n\tcomputed: {\n    ...mapState([\n      'serverURL',\n    ]),\n    checkboxErrors () {\n      const errors = []\n      if (!this.$v.checkbox.$dirty) return errors\n      !this.$v.checkbox.checked && errors.push('La confirmación es requerida')\n      return errors\n    }\n  }  \n  ,\n}\n",{"version":3,"sources":["roomUpdate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"roomUpdate.vue","sourceRoot":"src/components/room","sourcesContent":["<template>\n  <div class=\"roomsadd\">\n    <v-container fluid>\n    <form @submit.prevent=\"editRoom(room,{number, status, smoke, roomType})\">  \n        <v-text-field\n          v-model=\"number\"\n          v-validate=\"'required|max:20'\"\n          :counter=\"20\"\n          :error-messages=\"errors.collect('number')\"\n\t\t\t\t\t:placeholder=\"''+room.number\"\n          type=\"number\"\n          data-vv-name=\"number\"\n          required\n        ></v-text-field>\n        <v-select\n          v-model=\"status\"\n          v-validate=\"'required'\"\n          :items=\"items\"\n          :placeholder=\"room.status\"\n          :error-messages=\"errors.collect('status')\"\n          data-vv-name=\"status\"\n          required\n        ></v-select>\n        <v-select\n          v-model=\"smoke\"\n          v-validate=\"'required'\"\n          :items=\"itemsH\"\n          :error-messages=\"errors.collect('status')\"\n\t\t\t\t\t:placeholder=\"newSmoke\"\n          data-vv-name=\"smoke\"\n          required\n        ></v-select>   \n        <v-checkbox\n          v-model=\"checkbox\"\n          v-validate=\"'required'\"\n          :error-messages=\"errors.collect('checkbox')\"\n          value=\"1\"\n          label=\"Confirmar\"\n          data-vv-name=\"checkbox\"\n          type=\"checkbox\"\n          required\n        ></v-checkbox>  \n          <v-btn round color=\"success\" dark type=\"submit\">\n            <span>Guardar cambios</span><v-icon dark>save</v-icon>\n          </v-btn>\n          <v-btn round @click=\"clear\" color=\"warning\">Limpiar <v-icon dark>clear</v-icon></v-btn>\n          <v-btn round color=\"info\" to=\"/rooms\">\n            <span>Volver</span><v-icon dark>keyboard_backspace</v-icon>\n          </v-btn>        \n      </form>\n    </v-container>\n  </div>\n</template>\n\n<script>\n\n/* eslint-disable */\n\nimport axios from 'axios';\nimport moment from 'moment'; // Trabajo del tipo de dato Date (fechas).\nimport router from '@/router';\nimport { mapState } from 'vuex';\nimport { round } from '@amcharts/amcharts4/.internal/core/utils/Math';\nimport Vue from 'vue';\nimport VeeValidate from 'vee-validate';\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email } from 'vuelidate/lib/validators'\n\nVue.use(VeeValidate);\n\nexport default {\n\tname: 'RoomsAdd',\n\tcomponents: {\n\n  },\n\n  mixins: [validationMixin],\n\n  validations: {\n    checkbox: {\n      checked (val) {\n        return val\n      }\n    }\n  },\n  $_veeValidate: {\n    validator: 'new'\n  },  \n\tdata(){\n\t\treturn{\n\t\t\troom: {},\n      number: '',\n      smoke: '',\n      status: '',\n      newSmoke: '',\n      checkbox: '',\n\t\t\troomType: '',\n      items: [\n        'Disponible',\n\t\t\t\t'Reservada',\n\t\t\t\t'En mantención',\n\t\t\t\t'Ocupada'\n      ],\n      itemsH: [\n        'Sí',\n        'No'\n      ],      \t\t\t\n      dictionary: {\n        custom: {\n          number: {\n            required: () => 'El campo número no puede estar vacío',\n            max: 'La cantidad de caracteres en el campo no puede ser mayor a 20'\n            // custom messages\n          },            \n          status: {\n            required: () => 'Debe elegir una opción',\n            // custom messages\n          },         \n          checkbox: {\n            required: 'La confirmación es requerida'\n          }\n        }\n      }\n    }\n\t},\n  created() {\n    this.getRoom(this.$route.params.id);\n  },\n  mounted() {\n    this.$validator.localize('en', this.dictionary)\n  },\n\tmethods: {\n    getRoom(id) {\n      try {\n        axios\n          .get(this.serverURL + `/rooms/${id}`)\n          .then(response => {\n            var room = response.data;\n            var newSmoke = '';\n            if (room.smoke === true) {\n              newSmoke = 'Sí';\n            }\n            else{\n              newSmoke = 'No';\n            }\n            if (room) {\n              this.room = {\n                number: room.number,\n\t\t\t\t\t\t\t\tstatus: room.status,\n                smoke: room.smoke\t\t\t\t\t\t\n              }\n                this.number = room.number,\n\t\t\t\t\t\t\t\tthis.status = room.status,\n                this.smoke = newSmoke\t\n            }\n            else {\n              console.log('No hay habitaciones o no se puede acceder a ellas');\n            }\n          })\n          .catch(e => {\n            console.log(e.response);\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    editRoom(id, payload) {\n      this.loader = true;\n      var newSmoke = '';\n\t\t\tif (payload.smoke === 'Sí') {\n\t\t\t\tnewSmoke = true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnewSmoke = false;\n\t\t\t}\n      this.room = {\n        number: payload.number,\n        status: payload.status,\n        smoke: newSmoke,\n      }\n      try { \n        axios\n          .put(this.serverURL + `/rooms/edit/${this.$route.params.id}`, this.room)\n          .then(response => {\n              this.loader = false;\n              router.push({ name: 'rooms' })\n              this.loader = false;\n              console.log('La habitación ha sido actualizada.');\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    changeLoader(payload){\n\t\t\tthis.loader = payload;\n    },\n    submit () {\n      this.$validator.validateAll()\n    },\n    clear () {\n      this.number = ''\n      this.status = null\n      this.smoke = null\n      this.checkbox = null\n      this.$validator.reset()\n    }\n\t},\n\tcomputed: {\n    ...mapState([\n      'serverURL',\n    ]),\n    checkboxErrors () {\n      const errors = []\n      if (!this.$v.checkbox.$dirty) return errors\n      !this.$v.checkbox.checked && errors.push('La confirmación es requerida')\n      return errors\n    }\n  }  \n  ,\n}\n</script>"]}]}